{"ast":null,"code":"import formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status === 204) {\n      return null;\n    }\n    const payload = await response.json();\n    if (payload.error) {\n      return Promise.reject({\n        message: payload.error\n      });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n// List Reservations\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) => url.searchParams.append(key, value.toString()));\n  return await fetchJson(url, {\n    headers,\n    signal\n  }, []).then(formatReservationDate).then(formatReservationTime);\n}\n\n// Create Reservation\nexport async function createReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      data: reservation\n    }),\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n// Cancel Reservation\nexport async function cancelReservation(reservationId, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({\n      data: {\n        status: \"cancelled\"\n      }\n    }),\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n// List Tables\nexport async function listTables(signal) {\n  const url = `${API_BASE_URL}/tables`;\n  return await fetchJson(url, {\n    headers,\n    signal\n  }, []);\n}\n\n// Create Table\nexport async function createTable(table, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      data: table\n    }),\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n// Read Reservation\nexport async function readReservation(reservationId, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}`;\n  return await fetchJson(url, {\n    headers,\n    signal\n  }, {});\n}\n\n// Update Reservation\nexport async function updateReservation(updatedReservation, signal) {\n  const url = `${API_BASE_URL}/reservations/${updatedReservation.reservation_id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({\n      data: updatedReservation\n    }),\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n// Remove Reservation (for a table)\nexport async function removeReservation(tableId, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n// Update Table\nexport async function updateTable(tableId, updatedTable, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({\n      data: updatedTable\n    }),\n    signal\n  };\n  return await fetchJson(url, options);\n}","map":{"version":3,"names":["formatReservationDate","formatReservationTime","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","headers","Headers","append","fetchJson","url","options","onCancel","response","fetch","status","payload","json","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","toString","then","createReservation","reservation","method","body","JSON","stringify","cancelReservation","reservationId","listTables","createTable","table","readReservation","updateReservation","updatedReservation","reservation_id","removeReservation","tableId","updateTable","updatedTable"],"sources":["/Users/siangling/starter-restaurant-reservation/front-end/src/utils/api.js"],"sourcesContent":["import formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n// List Reservations\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n// Create Reservation\nexport async function createReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n// Cancel Reservation\nexport async function cancelReservation(reservationId, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: \"cancelled\" } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n// List Tables\nexport async function listTables(signal) {\n  const url = `${API_BASE_URL}/tables`;\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n// Create Table\nexport async function createTable(table, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n// Read Reservation\nexport async function readReservation(reservationId, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}`;\n  return await fetchJson(url, { headers, signal }, {});\n}\n\n// Update Reservation\nexport async function updateReservation(updatedReservation, signal) {\n  const url = `${API_BASE_URL}/reservations/${updatedReservation.reservation_id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: updatedReservation }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n// Remove Reservation (for a table)\nexport async function removeReservation(tableId, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n// Update Table\nexport async function updateTable(tableId, updatedTable, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: updatedTable }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}