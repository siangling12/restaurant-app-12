{"ast":null,"code":"var _jsxFileName = \"/Users/siangling/starter-restaurant-reservation/front-end/src/reservations/EditReservation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readReservation, updateReservation } from \"../utils/api\";\nimport ReservationForm from \"./ReservationForm\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditReservation() {\n  _s();\n  const history = useHistory();\n  const reservation_id = useParams().reservation_id;\n  const [error, setError] = useState(null);\n  const [reservation, setReservation] = useState(\"\");\n\n  // Load reservation by id //\n  useEffect(() => {\n    async function loadReservation() {\n      const response = await readReservation(reservation_id);\n      setReservation(response);\n    }\n    loadReservation();\n  }, [reservation_id]);\n\n  // Handlers //\n  const handleChange = ({\n    target\n  }) => {\n    setReservation({\n      ...reservation,\n      [target.name]: target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    updateReservation(reservation, abortController.signal)\n    // Need to slice returned date/time to only display date, because API returns full date/time string\n    .then(() => history.push(`/dashboard?date=${reservation.reservation_date.slice(0, 10)}`)).catch(error => setError(error));\n    return () => abortController.abort();\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-md-flex mb-3 flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        error: error,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationForm, {\n      reservation: reservation,\n      handleSubmit: handleSubmit,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(EditReservation, \"AZATSOSFzIUgm6W+idg9K6EFGTo=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = EditReservation;\nexport default EditReservation;\nvar _c;\n$RefreshReg$(_c, \"EditReservation\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","readReservation","updateReservation","ReservationForm","ErrorAlert","jsxDEV","_jsxDEV","EditReservation","_s","history","reservation_id","error","setError","reservation","setReservation","loadReservation","response","handleChange","target","name","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","then","push","reservation_date","slice","catch","abort","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siangling/starter-restaurant-reservation/front-end/src/reservations/EditReservation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readReservation, updateReservation } from \"../utils/api\";\nimport ReservationForm from \"./ReservationForm\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction EditReservation() {\n  const history = useHistory();\n  const reservation_id = useParams().reservation_id;\n\n  const [error, setError] = useState(null);\n  const [reservation, setReservation] = useState(\"\");\n\n\n  // Load reservation by id //\n  useEffect(() => {\n    async function loadReservation() {\n      const response = await readReservation(reservation_id);\n      setReservation(response);\n    }\n    loadReservation();\n  }, [reservation_id]);\n\n\n  // Handlers //\n  const handleChange = ({ target }) => {\n    setReservation({ ...reservation, [target.name]: target.value });\n  }\n   \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    const abortController = new AbortController();\n      updateReservation(reservation, abortController.signal)\n      // Need to slice returned date/time to only display date, because API returns full date/time string\n        .then(() => history.push(`/dashboard?date=${reservation.reservation_date.slice(0, 10)}`))\n        .catch((error) => setError(error));\n\n      return () => abortController.abort();\n  };\n\n\n  return (\n    <main>\n      <div className=\"d-md-flex mb-3 flex-column\">\n        <h1>Edit Reservation</h1>\n        <ErrorAlert error={error} setError={setError} />\n      </div>\n\n      <ReservationForm \n        reservation={reservation}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    </main>\n  );\n}\n\nexport default EditReservation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,cAAc;AACjE,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAMW,cAAc,GAAGV,SAAS,CAAC,CAAC,CAACU,cAAc;EAEjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAGlD;EACAC,SAAS,CAAC,MAAM;IACd,eAAeiB,eAAeA,CAAA,EAAG;MAC/B,MAAMC,QAAQ,GAAG,MAAMf,eAAe,CAACS,cAAc,CAAC;MACtDI,cAAc,CAACE,QAAQ,CAAC;IAC1B;IACAD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;;EAGpB;EACA,MAAMO,YAAY,GAAGA,CAAC;IAAEC;EAAO,CAAC,KAAK;IACnCJ,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACK,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC3CvB,iBAAiB,CAACW,WAAW,EAAEW,eAAe,CAACE,MAAM;IACrD;IAAA,CACGC,IAAI,CAAC,MAAMlB,OAAO,CAACmB,IAAI,CAAC,mBAAmBf,WAAW,CAACgB,gBAAgB,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CACxFC,KAAK,CAAEpB,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC,CAAC;IAEpC,OAAO,MAAMa,eAAe,CAACQ,KAAK,CAAC,CAAC;EACxC,CAAC;EAGD,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAK4B,SAAS,EAAC,4BAA4B;MAAAD,QAAA,gBACzC3B,OAAA;QAAA2B,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBhC,OAAA,CAACF,UAAU;QAACO,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAENhC,OAAA,CAACH,eAAe;MACdU,WAAW,EAAEA,WAAY;MACzBQ,YAAY,EAAEA,YAAa;MAC3BJ,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAAC9B,EAAA,CAlDQD,eAAe;EAAA,QACNR,UAAU,EACHC,SAAS;AAAA;AAAAuC,EAAA,GAFzBhC,eAAe;AAoDxB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}